# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/bankingsimulation.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

resources:
  repositories:
    - repository: BankingSimulation
      endpoint: GitHubServiceConnection
      type: github
      name: callummarshall9/BankingSimulation
      ref: $(Build.SourceBranch)
    - repository: AspNetCoreOData
      endpoint: GitHubServiceConnection
      type: github
      name: callummarshall9/AspNetCoreOData

steps:
- checkout: BankingSimulation
  displayName: 'Pull Repository with Submodules'
- checkout: AspNetCoreOData
  displayName: 'Pull OData repository'

- task: CopyFiles@2
  displayName: 'Copy OData repo to BankingSimulation sub module path'
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)/AspNetCoreOData'
    Contents: '**'
    TargetFolder: '$(Build.Repository.LocalPath)/BankingSimulation/AspNetCoreOData'
    CleanTargetFolder: true
    OverWrite: true

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: PowerShell@2
  displayName: 'Set connection strings in appsettings'
  inputs:
    workingDirectory: '$(Build.Repository.LocalPath)/BankingSimulation/BankingSimulation'
    targetType: 'inline'
    script: |
      $json = Get-Content appsettings.json | ConvertFrom-Json
      $json | Add-Member -MemberType NoteProperty -Name "ConnectionStrings:BankSimulationContext" -Value $env:BankConnectionString
      $json | Add-Member -MemberType NoteProperty -Name "ConnectionStrings:SSO" -Value $env:SSOConnectionString
      Set-Content -Path appsettings.json -value $($json | ConvertTo-Json)

- task: UseDotNet@2
  displayName: 'Use .NET 8'
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '-c Release -o $(Build.Repository.LocalPath)/BankingSimulation/BankingSimulation/BankingSimulation'
    zipAfterPublish: true
    workingDirectory: '$(Build.Repository.LocalPath)/BankingSimulation/BankingSimulation'

- task: CopyFiles@2
  displayName: 'Copy packaged zip'
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)/BankingSimulation/BankingSimulation/BankingSimulation'
    Contents: 'BankingSimulation.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'